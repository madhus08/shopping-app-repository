@model ShoppingAppFB.Models.SellProductDetail

@{
    ViewBag.Title = "SellProduct";
}

<h2>SellProduct</h2>

@using (Html.BeginForm("SellProduct", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
       

        <div class="form-group">
            @Html.LabelFor(model => model.ItemName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemImage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* input type to upload image *@
                <input type="file" name="image" id="image" />
               
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemDescription, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemCategory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @* dropdown list to select category *@
                @{
                    List<SelectListItem> listItems = new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                    {
                        Text = "Electronics",
                        Value = "type1"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Household",
                        Value = "type2",
                        Selected = true
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Women",
                        Value = "type3"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Men",
                        Value = "type4"
                    });
                    listItems.Add(new SelectListItem
                    {
                        Text = "Clothing",
                        Value = "type4"
                    });
                }

                @Html.DropDownListFor(model => model.ItemCategory, listItems, "-- Select Status --")
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ItemPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ItemPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ItemPrice, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
